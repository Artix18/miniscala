Projet : compilateur petitscala
Groupe : Jules Pondard et Hugo Manet

Version 2 : rendu final du projet.

Résumé de notre travail : Nous nous sommes inspirés du cours sur la compilation des langages orientés objets pour coder notre compilateur de petit scala.
Nous avons commencé par implémenter les descripteurs de classe tels que décrits dans le sujet, puis nous avons compilé l'allocation d'un objet Main pour pouvoir commencer
à tester. Nous avons rapidement modifié notre code pour considérer que Main devait être compilée exactement comme les autres classes. Ainsi avec une implémentation minimaliste des
déclarations, qui ne déclarait jamais de variables, nous avons pu commencer à compiler les expressions. Ensuite nous avons ajouté les membres, comme s'ils faisaient
partie du constructeur, et enfin nous avons compilé les variables et les call.

Appréciation du sujet : Cette partie du sujet était très amusante ; nous prenions beaucoup de plaisir à voir que notre compilateur produisait de plus en plus de code
correct. Parfois, quelques segfault. Nous avons tenté de débuger avec Nemiver mais ne savons pas comment résoudre le problème de "fichier malloc.c non trouvé", qui
peut être résolu simplement dans gdb en lui indiquant de "sortir d'ici". Gdb a été un bon allié pour remarquer que nos constructeurs recopiaient n'importe comment les arguments, malheureusement il n'est pas très "visuel".

Choix : Nous avons jugé utile d'introduire quelques registres intermédiaires à certains endroits, notamment r14 qui doit survivre non seulement à l'appel des méthodes mais aussi à celui des expressions dans notre code !
Nous n'avons pas codé de fonction alloc, qui aurait permi un peu plus d'efficacité que de push et pop variable par variable à chaque fois..
Nous avons choisi de considérer les variables du constructeur comme publiques, ce qui contredit le vrai scala et donne lieu à des ambiguités si l'on veut modifier une variable x dans un père, alors qu'elle est redéfinie dans un fils.
Nous n'avons pas réglé le problème de l'instanciation d'objets d'un paramètre type classe. Notre code renvoie une anomalie not_found dans ce cas là (et normalement, seulement dans ce cas là).

Conclusion : nous passons tous les tests fournis (100% !), et certains petits bidouillages à la main. Nous passons tous les tests mis en commun par Théophile (à l'adresse https://compil.tobast.fr/), même le notre sur les noms des classes et méthodes... Nous passons en particulier les tests amusants comme le Quine petit-scala.

Merci pour ce projet :)

Lien vers le github : https://github.com/Artix18/miniscala
